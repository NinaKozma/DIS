version: '2.1'

services:
  post:
    build: microservices/post-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb

  reaction:
    build: microservices/reaction-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongodb

  comment:
    build: microservices/comment-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql1:
        condition: service_healthy
        
  image:
    build: microservices/image-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mysql2:
        condition: service_healthy

  post-composite:
    build: microservices/post-composite-service
    mem_limit: 350m
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  # $ mongo
  mongodb:
    image: mongo:3.6.9
    mem_limit: 350m
    ports:
      - "27017:27017"
    command: mongod --smallfiles

  # $ mysql -uroot -h127.0.0.1 -p
  mysql1:
    image: mysql:5.7
    mem_limit: 350m
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=comment-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uuser", "-ppwd", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 10
      
  mysql2:
      image: mysql:5.7
      mem_limit: 350m
      ports:
        - "3308:3306"
      environment:
        - MYSQL_ROOT_PASSWORD=rootpwd
        - MYSQL_DATABASE=image-db
        - MYSQL_USER=user
        - MYSQL_PASSWORD=pwd
      healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-uuser", "-ppwd", "-h", "localhost"]
        interval: 10s
        timeout: 5s
        retries: 10